/*
아이디어 : 
그리디 문제인데 길을 가기 위해서 필요한 리터가 있다. 그 리터만큼 기름을 사야하는데 가장 가격이 작은 주유소에서 많이 사면 끝이다.
*/
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int N;
vector<int> distances;
vector<int> price;

int main() {
    cin >> N;
    for (int i = 0; i < N-1; i ++) {
        int n;
        cin >> n;
        distances.push_back(n);
    }
    for (int i = 0; i < N; i ++) {
        int n;
        cin >> n;
        price.push_back(n);
    }

    unsigned long long int min = price[0];
    unsigned long long int result = distances[0] * min;
    
    for (int i = 1; i < N-1; i ++) {
        min = (min < price[i]) ? min : price[i];
        result += min * distances[i];
    }

    cout << result << '\n';
    
}