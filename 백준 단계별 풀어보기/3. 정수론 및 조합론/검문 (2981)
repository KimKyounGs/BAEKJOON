/*
아이디어 :

참고 : https://cocoon1787.tistory.com/214
erase, unique : https://dpdpwl.tistory.com/39
*/
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int N;
vector<int> v;
vector<int> result;

int gcd(int num1, int num2){
    if(num2 == 0) return num1;
    else return gcd(num2, num1 % num2);
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> N;
    for (int i = 0; i < N; i ++) {
        int n;
        cin >> n;
        v.push_back(n);
    }
    sort(v.begin(), v.end());
    
    int Gcd = v[1] - v[0];
    for (int i = 2; i < N; i ++) {
        Gcd = gcd(Gcd, v[i] - v[i-1]);
    }

    for (int i = 2; i * i <= Gcd; i++) {
        if (Gcd % i == 0) {
    		result.push_back(i); 
    		result.push_back(Gcd / i);
    	}
    }
    result.push_back(Gcd);

    sort(result.begin(), result.end());

    result.erase(unique(result.begin(), result.end()), result.end()); // 중복된 원소들 제거

	for (int i = 0; i < result.size(); i++) {
        cout << result[i] << " ";
    }
    
    
}