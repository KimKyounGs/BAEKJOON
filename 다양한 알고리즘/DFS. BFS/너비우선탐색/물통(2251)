// 참고 : https://yabmoons.tistory.com/118

#include <bits/stdc++.h>

using namespace std;

int A, B, C;
bool visited[201][201][201];

vector<int> v;

void BFS() {
    queue<pair<pair<int, int> ,int >> q;
    q.push({{0,0},C});

    while(!q.empty()) {
        int a = q.front().first.first;
        int b = q.front().first.second;
        int c = q.front().second;
        q.pop();

        if (visited[a][b][c]) continue;
        visited[a][b][c] = true;

        if (a == 0) v.push_back(c);

        // A물통에서 B물통으로 줄 때
        if (a + b > B) q.push({{a+b-B,B},c});
        else q.push({{0,a+b},c});

        // A물통에서 C물통으로 줄 때
        if (a + c > C) q.push({{a+c-C,b},C});
        else q.push({{0,b},a+c});

        // B물통에서 A물통으로 줄 때
        if (b + a > A) q.push({{A,b+a-A},c});
        else q.push({{b+a,0},c});

        // B물통에서 C물통으로 줄 때
        if (b + c > C) q.push({{a,b+c-C},C});
        else q.push({{a,0},b+c});
        
        // C물통에서 A물통으로 줄 때
        if (c + a > A) q.push({{A,b},c+a-A});
        else q.push({{c+a,b},0});

        // C물통에서 B물통으로 줄 때
        if (c + b > B) q.push({{a,B},c+b-B});
        else q.push({{a,b+c},0});
    }
}

int main() {
    cin >> A >> B >> C;
    BFS();

    sort(v.begin(), v.end());
    for (int i = 0; i < v.size(); i ++) {
        cout << v[i] << " ";
    }

    return 0;
}