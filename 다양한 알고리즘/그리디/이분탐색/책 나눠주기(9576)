// 아이디어 : 먼저 기본적인 구현으로는 삼중 포문을 사용한다. 바깥 for문부터 1.학생수, 2.학생 한명의 책 범위, 3.책을 나눠줬는가? 를 목적으로 for문을 사용한다. 하지만 이렇게 하면 O(N^3)이 걸려 시간초과가 날 수 있다. 그러므로 for문중 최소 하나를 O(log2N)을 가지는 알고리즘을 사용해야 한다. 처음에는 몰랐지만 알고리즘 분류를 보고 이분매칭(이진탐색)을 이용해야하는 것을 알았다. 그 중에서도 학생 한명의 책 범위를 이분 탐색을 이용하여 범위를 쪼개가면서 책을 나눠줬는가를 체크 하는데, 여기서 중요한 점은 입력이 무작위로 주어지기 때문에 회의실 배정처럼 끝나는 범위를 기준으로 오름차순 정렬해줘야만 최대로 나눠줄 수 있다.
#include <bits/stdc++.h>

using namespace std;

int main() {    
    int T;
    cin >> T;
    
    while(T--) {
        bool book[1001] = {0,};
        vector<pair<int, int>> student;

        // 입력
        int N, M;
        cin >> N >> M;
        for (int i = 0; i < M; i ++) {
            int a, b;
            cin >> a >> b;
            student.push_back({b,a});
        }

        sort(student.begin(), student.end());
        
        int result = 0;
        for (int i = 0; i < M; i ++) { // 학생수
            int start = student[i].second;
            int end = student[i].first;
            bool check = false;
            while(start <= end) { // 학생 한명의 책 범위
                int mid = (start+end)/2;
                for (int j = start; j <= mid; j ++) {
                    if (!book[j]) {
                        check = true;
                        book[j] = true;
                        result ++;
                        break;
                    }
                }
                if (check) break;
                start = mid + 1;
            }
        }
        cout << result << '\n';
    }
    return 0;
}