#include <bits/stdc++.h>

using namespace std;

int R, C;
int result;
bool check;
int graph[10001][501];
bool visited[10001][501];

int dx[] = {-1, 0, 1};
int dy[] = {1, 1, 1};

void DFS(int x, int y) {
    visited[x][y] = true;

    for (int i = 0; i < 3; i ++) {
        int nx = x + dx[i];
        int ny = y + dy[i];

        if (nx < 0 || nx > R - 1 || ny < 0 || ny > C - 1) {
            continue;
        }
        
        if (graph[nx][ny] == 0 || visited[nx][ny]) {
            continue;
        }
        
        if (check) {
            return;
        }
        
        if (graph[nx][ny] == 1) {
            if (ny == C-1) {
                visited[nx][ny] = true;
                result ++;
                check = true;
                return;
            }
            else {
                visited[nx][ny] = true;
                DFS(nx, ny);
            }
        }
    }
}

int main() {    
    cin >> R >> C;
    for (int i = 0; i < R; i ++) {
        for (int j = 0; j < C; j ++) {
            char n;
            cin >> n;
            if (n == '.') {
                graph[i][j] = 1;
            }
            else {
                graph[i][j] = 0;
            }
        }
    }
    
    for (int i = 0; i < R; i ++) {
        check = false;
        DFS(i,0);
    }
    
    cout << result << '\n';
    return 0;
}