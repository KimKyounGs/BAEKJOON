/*
아이디어 :

주어진 방법은 곱하거나 더하기 두 가지가 있다.


양수: 큰 숫자끼리 곱하기. 뒤에 숫자가 0이면 각각 더하기. 곱한 것이 더한 것보다 낮다면 각각 더하기.
음수: 큰 숫자끼리 곱해서 플러스로 만들기. or 0이랑 곱해서 없애기.

양수랑 음수랑 나눠서 처리.

ex)
4
-1
2
1
3

시간복잡도 : O(N)
*/
#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <cmath>
#include <cstring>
#include <deque>
#include <map>
#define INF 1e9
#define endl '\n'

using namespace std;

int N;
int result;
vector<int> v;

int main()
{
    cin >> N;
    for (int i = 0; i < N; i ++) {
        int n;
        cin >> n;
        v.push_back(n);
    }

    sort(v.begin(), v.end());

    int idx = 0;
    // 음수 처리
    while(true) {
        // 음수
        if (v[idx] < 0) {
            if (idx + 1 < N) {
                if (v[idx + 1] <= 0) {
                    result += v[idx] * v[idx + 1];
                    idx += 2;
                } 
                else {
                    result += v[idx];
                    idx ++;
                }
            }
            else {
                result += v[idx];
                idx ++;
            }
        }
        else {
            break;
        }
    }
    //cout << "Debug = " << result << endl;
    // 양수 처리
    for (int i = N-1; i >= idx; i --) {
        if (i-1 >= idx) {
            // 뒤에 숫자가 0이면 각각 더하기. ex) 0 1 -> 0*1 (x), 0+1 (o)
            if (v[i-1] == 0) {
                result += v[i-1] + v[i];
            }
            // 곱했을 때가 더하는 것보다 낮으면 각각 더하기
            else if (v[i-1] * v[i] < v[i-1] + v[i]) {
                result += v[i-1] + v[i];
            }
            // 곱하기.
            else {
                result += v[i-1] * v[i];
            }
            i--;
        }
        // 뒤에 숫자가 없으면 그냥 더하기.
        else {
            result += v[i];
        }
    }

    cout << result << endl;
    return 0;
}