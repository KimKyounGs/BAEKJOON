/*
아이디어 :

회의실 배정은 외워두면 좋은 문제이다.
반복해서 많이 풀어보는 것을 추천.


참고한 사이트 : https://source-sc.tistory.com/59

문제를 읽다보면 "어떻게 하면 회의실을 많이 배정할 수 있을까?"라는 생각을 할 것이다. 또는 비슷한 생각.
그러면 자연스럽게 회의시간이 빠른 것들을 먼저 배정할까? 또는 회의가 짧은 시간을 배정하면 좋지 않을까 라는 생각을 하게 될 것이다.
결론부터 말하자면 회의 끝나는 시간이 가장 빠른 것들을 먼저 배정하는 것이다.
또한 끝나는 시간이 같으면 시작시간이 더 짧은 것을 먼저 배정한다.
이에 대한 대답은 저 사이트에 정리가 잘 되어있다.

시간 복잡도 : O(NlogN)
*/
#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <cmath>
#include <cstring>
#include <deque>
#define INF 1e9
#define endl '\n'

using namespace std;

int N;
int result = 1;
vector<pair<int, int>> v; // pair<끝나는 시간, 시작 시간> v -> 이유는 정렬할 때 끝나는 시간을 기준으로 정렬하기 위해서.

int main()
{
    cin >> N;
    for (int i = 0; i < N; i++) {
        int a,b;
        cin >> a >> b;    
        v.push_back({b,a});
    }

    // 끝나는 시간을 기준으로 오름차순.
    sort(v.begin(), v.end()); 

    int endTime = v[0].first;
    for (int i = 1; i < N; i ++) {
        if (endTime <= v[i].second) { // 끝나자마자 시작할 수 있기 때문에 <= 사용.
            endTime = v[i].first;
            result ++;
        }
    }

    cout << result << endl;
    return 0;
}