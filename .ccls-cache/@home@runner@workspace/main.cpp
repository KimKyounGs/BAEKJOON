//문제
정수 10 개를 저장할 수 있는 배열을 만들어서 1 부터 10 까지를 대입하고 차례대로 출력하는 프로그램을 작성하시오.

//출력
1 2 3 4 5 6 7 8 9 10


    /*
    //문제 
    문자 10개를 저장할 수 있는 배열을 만들고 10개의 문자를 입력받아 입력받은 문자를 이어서 출력하는 프로그램을 작성하시오.

    //입력
    A B C D E F G H I J

    //출력
    ABCDEFGHIJ
    */


    //문제
    문자열을 하나 입력받아서 문자열의 길이를 출력하는 프로그램을 작성하시오.

    //입력
    abcde

    //출력
    5 

    
    /* 
    //문제
    배열에 10개의 값을 주고 가장 작은 값과 가장 큰 값을 출력하시오. 
    입력받는 정수는 1~100사이의 수이다. 

    //입력
    9 51 20 16 60 81 2 11 23 33

    //출력
    2 81
    */ 

    /* 
    //문제
    세준이는 국,영,수 과목의 기말고사를 망쳤다. 
    세준이는 점수를 조작해서 집에 가져가기로 했다. 일단 세준이는 자기 점수 중에 최댓값을 골랐다. 이 값을 M이라고 한다. 그리고 나서 모든 점수를 점수/M*100으로 고쳤다.
    예를 들어, 세준이의 최고점이 70이고, 수학점수가 50이었으면 수학점수는 50/70*100이 되어 71.43점이 된다.
    세준이의 성적을 위의 방법대로 새로 계산했을 때, 새로운 평균을 구해 소수점 둘째자리까지 출력하는 프로그램을 작성하시오.

    //입력
    10 20 30

    //출력
    66.67
    */


    /*
    //문제 
    0번부터 9번의 연예인에 대한 인기투표를 한다고 가정하자.
    투표결과를 출력하시오.
    (단, -1을 입력하면 종료.)

    //입력
    몇번을 선택하시겠습니까? 1
    몇번을 선택하시겠습니까? 1
    몇번을 선택하시겠습니까? 1
    몇번을 선택하시겠습니까? 1
    몇번을 선택하시겠습니까? -1

    //출력
    결과
    0 0
    1 4
    2 0
    3 0
    4 0
    5 0
    6 0
    7 0
    8 0
    9 0

    */


    /*

    //문제 
    정수 10개를 저장할 수 있는 배열을 선언한 후 배열 요소 10개를 입력을 받으시오.  
    찾고 싶은 수 하나를 입력받은 뒤 그 수가 위치한 인덱스를 출력하시오. 없으면 -1 출력.

    //입력
    10 1 3 4 2 8 5 6 7 9
    찾고싶은 수를 입력하시오. 1

    //출력
    1


    */

    /*

    //문제
    10개의 정수를 입력받아 배열에 저장한 후 짝수 번째 입력된 값의 합과 홀수 번재 입력된 값의 평균을
    출력하는 프로그램을 작성하시오.

    //입력
    95 100 88 65 76 89 58 93 77 99
    //출력
    sum(짝수) : 446
    avg(홀수) : 78.8

    */

    /*

    //문제
    정수를 입력받다가 0이 입력되면 0을 제외하고 그때까지 입력받은 개수를 출력한 후
    입력받은 정수를 차례로 출력하되 그 수가 홀수이면 10을 더한 값을,
    짝수인 경우에는 10을 뺀 값을 프로그램을 작성하시오.

    입력되는 정수의 개수는 100개 이하이다. 

    //입력
    8 10 5 15 100 0

    //출력
    5
    -2 0 15 25 90

    */
    
    
/*
아이디어 : 처음 외벽을 조사할 때 들어갈 수 있는지 확인한다.

*/
#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <cmath>
#include <cstring>
#include <deque>
#include <map>
#define INF 1e9
#define endl '\n'

using namespace std;

int N, K;
int graph[500001];
int brother[500001];
bool bResult = false;

int Cal(int num)
{
    return K+((num*(1+num))/2);
}

void BFS(int x)
{
    queue<int> q;
    q.push({x});
    graph[x] = 0;

    while(!q.empty())
    {
        int x = q.front();
        q.pop();
        // 동생을 찾음
        if (x == Cal(graph[x]))
        {
            bResult = true;
            cout << graph[x] << endl;
            return;
        }

        // 곱하기
        if (2*x <= 500000 || graph[2*x] == -1)
        {
            graph[2*x] = graph[x]+1;
            q.push(2*x);
            cout << "곱하기 " << 2*x << endl;
        }
        // 더하기
        if (x+1 <= 500000 || graph[x+1] == -1) 
        {
            graph[x+1] = graph[x]+1;
            q.push(x+1);
            cout << "더하기 " << x+1 << endl;
        }
        // 빼기
        if (x-1 >= 0 || graph[x-1] == -1)
        {
            graph[x-1] = graph[x]+1;
            q.push(x-1);
            cout << "빼기 " << x-1 << endl;
        }
    }
}

int main()
{
    cin >> N >> K;
    if (N == K) 
    {
        cout << 0 << endl;
        return 0;
    }

    memset(graph, -1, sizeof(graph));
    BFS(N);
    if (!bResult)
    {
        cout << -1 << endl;
    }
}