/*
# 아이디어 
참고 : https://rolypolytoy.tistory.com/51

너무 어렵게 생각한 문제이다. 구간을 중점으로 답을 낼려 했는데, 그러면 예외케이스가 처리가 어려워진다.
그래서 이진탐색으로 최대의 최소를 목표로 두고 배열에 접근을 하는 방법을 선택했다. 
방법은 찾았는데 조건에 따라서 start와 end를 어떻게 변화시킬지 헷갈렸다. 다행이 참고자료를 보고 금방 이해를 했음.
이진탐색 문제인 것을 알면, 마음먹으면 어떻게든 풀이 방법을 떠올리는데 애초에 이진탐색 문제인지 모르고 풀면 아직까지는 자신이 없다.
*/

#include <bits/stdc++.h>

using namespace std;

int N, M;
int arr[5001];

int main() {
    cin >> N >> M;
    int Max = 0;
    for (int i = 0; i < N; i ++) {
        cin >> arr[i];
        if (arr[i] > Max) Max = arr[i];
    }

    int start = 0;
    int end = Max;
    int result = Max;
    while(start <= end) {
        int mid = (start + end) / 2;

        int arrMax = arr[0], arrMin = arr[0];
        int cnt = 1;
        for (int i = 0; i < N; i ++) {
            if (arr[i] > arrMax) arrMax = arr[i];
            if (arr[i] < arrMin) arrMin = arr[i];

            if (arrMax - arrMin > mid) {
                cnt ++;
                arrMax = arr[i];
                arrMin = arr[i];
            } 
        } 

        if (cnt <= M) {
            if (mid < result) result = mid;
            end = mid - 1;
        }
        else {
            start = mid + 1;
        }
    }

    cout << result << '\n';
    
    
	return 0;
}